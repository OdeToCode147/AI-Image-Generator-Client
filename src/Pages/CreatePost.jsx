import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import preview from "../Assets/preview.png";
import Loader from "../Components/Loader.js";
import FormField from "../Components/FormField";
import { getRandomPrompt } from "../Utils";

const CreatePost = () => {
  const navigate = useNavigate();

  const [form, setForm] = useState({
    name: "",
    prompt: "",
    photo: "",
  });

  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({ ...form, prompt: randomPrompt });
  };
  console.log(form);

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (form.prompt && form.photo) {
      setLoading(true);
      try {
        const response = await fetch(
          "https://ai-image-generator-server-zrph.onrender.com/api/v1/post",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(form),
          }
        );
        await response.json();
        navigate("/");
      } catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    } else {
      alert("Please enter a prompt to generate an image");
    }
  };

  const generateImage = async () => {
    if (form.prompt) {
      try {
        setGeneratingImg(true);
        const response = await fetch(
          "https://ai-image-generator-server-zrph.onrender.com/api/v1/dalle",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ prompt: form.prompt }),
          }
        );
        const data = await response.json();
        setForm({ ...form, photo: `data:image/jpeg;base64,${data.photo}` });
      } catch (error) {
        alert(error);
      } finally {
        setGeneratingImg(false);
      }
    } else {
      alert("Please enter a prompt");
    }
  };

  return (
    <div>
      <div>
        <h1 className="font-extrabold">Create</h1>
        <p className="mt-3">
          Create imaginative and visually stunning images generated by DALL-E AI
          and share them with community
        </p>
      </div>
      <form onSubmit={handleSubmit}>
        <div className="d-flex flex-column gap-5">
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            placeholder="Surya"
            value={form.name}
            handleChange={handleChange}
          />
          <br />
          <FormField
            labelName="Prompt"
            type="text"
            name="prompt"
            placeholder="earth reviving after human extinction, a new beginning, nature taking over buildings, animal kingdom, harmony, peace, earth balanced"
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />
          <div className=" imageHolder">
            {form.photo ? (
              <img src={form.photo} alt={form.prompt} className="Image" />
            ) : (
              <img src={preview} alt="preview" className="blankImage" />
            )}

            {generatingImg && (
              <div className="imageLayover">
                <Loader />
              </div>
            )}
          </div>
        </div>
        <div className="d-flex mx-5">
          <button
            type="button"
            onClick={generateImage}
            className=" btn btn-success mx-5 px-5"
          >
            {generatingImg ? "Generating..." : "Generate"}
          </button>
        </div>
        <div className="shareImage">
          <p className="mx-5 mt-2">
            Once you have created the image you want, you can share it with
            others in the community
          </p>
          <button type="submit" className=" btn btn-primary px-5">
            {loading ? "Sharing..." : "Share with the Community"}
          </button>
        </div>
      </form>
    </div>
  );
};

export default CreatePost;
